sudo: required

language: elixir
elixir: '1.6'
otp_release: '20.0'
services:
- docker
env:
  global:
  - IMAGE_NAME=firestarter/example-phoenix-app
  - REGISTRY_USER=firestarter
  # REGISTRY_PASS=...
  - secure: teccPk538YYCxh4XyQFc7txDwWtIsYcOkSlOFCmjcbYauqxW6YrpZbwwPOhIhFXvXjD5odJGS8/3pCMPhAPes+Z2LsS6g1F+SCiG/EJWzJHYjos79EW7i1Sxzw86SdGb4sJRbzyyIWQBmLEH+HSqti4KVbbcWuQSNefmZ8W9MgNmt4obP/BwBhLvXrtu+IaQ4245KWIGJt+BvvB9GV/X/Q6cNv2LouxUtNhv7+Hr18JrACDaGfZzwqyPU5eiVb0uC4w7I86SwpQZcmKudk1bZlgs41xWhHQJzLpw9u/0XLt4bgIQdyOvXCruNAP/+D+B7I1KRaYXjZw9mwUxnsfhwwpm5NUVBwct+gfq1eQSefzbrY2pLCESv65Qf6M/HzkzOt9WqXrXyBMEWZc8KJLrQ0i6ek8nvGsfj7wljNaBe6amL96YulDt/y4te58lUN5NflILXBLhKineqYnxzm/8lscDXHH8Ce5k/7gY4jErFwT0WU1DPyC8QBk67NjyXDVT0OBl7dQapMe3h8xlpxBUD3s1ipn3gcTmJSAXO5MtZzOqJkZI5a3mAum/+7g17YFo0w4nILoN/Kv838yNZeSmzo0OIjeV/+LnPBJkF9EHijvUA6EuQjKVZ52XUbzN7YPmE83fm7++2tPZfwJ+5KJndIKz4J0Y+Sj3RVLJmZht64o=

install: "./install-dependencies.sh"
before_script:
- docker pull "$IMAGE_NAME" || true
- secure: "SdfI+JjcFpW2fnJYzjmYUgnszhe5uYavM3LyYcAxpbeyoAP3GvSZlGWgdM+EB4aLBe1FbOw84oyAq3vd0Ts8CYxvueUnbvfTP22yZoXLQxUHPRTDrIY6zuASpulufylGqJ+ET0GoV9DO4o/2BO1/yi5uhpI7wYoOwakS7lpR+5hXE4aA/w3C4dOOGWkKMCjllU9Wr3vLPXBOtIZIQSl3bm8lzDz0+ee1TX/5QDpeb4lHXGnoEmZk1qlfA4Ul8cpnoOT9SV1Es/yS4KylemLkCdL419+4toFsi9aAmhVywpkcuykF5W1NvA74IaXkbw6ezEaxoegP3q7iPEGbiVPuoKjwgnFMS5x9sI80lgrqIwvkruKseAeU824JbqkEqB/ODJmTPuMUbC8pMy9sZ9Y8+yS60AVf8WrOJzNZ0tOnPy+u/KwXekp5UItI9ABH7/reE8+XUZ0cXmxsqZ8DNRnAzVfiYNLj/CYR51HLo6eIvae2zG3pNBDqd/u83tLnUI6mL/eGerRtMxqwAwjdFWNAZcW5b2bmtSDPoIRaigyCeEzQYMfuHiJNrafZfPIhfjNNG24+oc4OxN2LO0buyFdQDxICul30gpG5npbf7qcZ0lbgAKkJ3lfXRr++iHSpL9oQs1bX2Lmf8egpu4t8Xdy7hmVrJraSC27XlGEVhOP3ScM="
- secure: "hr2FqpRSSg7JeImXEWMtilqKLTKCL+jZ2Wv2epDQayzjgzThK1DvYjoLf5E4ImNKqcQpf3AxslYPw9o0+YobGIYxK5zKUV5PRCfp51DO42wVjPqRruqpnjnVM044T5ZYfG3Zw5Foa1K5aH0EA9P+Xy4o9DmjGOQk8+U71mufk6f6Fff+gZzpOjO82ftaFwdNQHZ8Pb7Zg2PYvYiOB/dSNE1pM1s3CKLp57jRF0mC0wkvYTvfk4c4UeBHwcCORqpBmY0iato9tlrT+6jbbZV2mq+hEvZOjHIJOCin1bJvrL88WuH63A07BZCqVEHdsiCZajEDCIzLA/2/ewrlhfmUeX9EHwAUHqtS/JRUPxLlNNeN3+d+5JzTQbRZygYl3JQeEjCd9pwoUfP9nYQhwNUL22KjoL6EzzQdch782RXX8zt2PISWs9crPPEcYVGNfnKR+er0qwaprVbjcA227BeDW+Tj+idvPsPmkhE4qsONXKSImDSYG4QOGsRPpHCf6FCuRbOj6lOyGbwyo2pF62Bnj/l11DLgfWMLjuA5AHUa+copU2ndk0vahCDmPSPJDGTt2L80CQEX8u36GraBLjks1ppZx3Due8QGM3G7WBtxq//s3HU61HfESYcu8PjxSPwmG7TlQchH/6ybyDe9/b2SeD5ASMHS7GdxKmrRaB2d26A="

script:
- "./build-script.sh"
- docker build --pull --cache-from "$IMAGE_NAME" --tag "$IMAGE_NAME" .
after_script:
- docker images
before_deploy:
- docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"
- docker tag "$IMAGE_NAME" "${IMAGE_NAME}:latest"
#- docker tag "$IMAGE_NAME" "${IMAGE_NAME}:${version}"
deploy:
  provider: script
  script: docker push "${IMAGE_NAME}:latest" #&& docker push "${IMAGE_NAME}:${version}"
  on: 
    branch: master
